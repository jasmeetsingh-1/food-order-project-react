{"ast":null,"code":"import _objectSpread from\"D:/food order project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/food order project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{MDBBtn,MDBContainer,MDBRow,MDBCol,MDBCard,MDBCardBody,MDBInput}from\"mdb-react-ui-kit\";import\"mdb-react-ui-kit/dist/css/mdb.min.css\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";// import { useNavigate } from \"react-router-dom\";\nimport\"./cssFiles/loginComponent.css\";import Header from\"../Layout/Header\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function LoginPage(){var _useState=useState({username:\"\",password:\"\",confirmpassword:\"\",email:\"\",name:\"\"}),_useState2=_slicedToArray(_useState,2),signUpFormData=_useState2[0],setSignUpFormData=_useState2[1];var _useState3=useState({usernameLogin:\"\",passwordLogin:\"\"}),_useState4=_slicedToArray(_useState3,2),loginFormData=_useState4[0],setLoginFormData=_useState4[1];var toastConfig={position:\"bottom-right\",autoClose:3000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:\"dark\"};function signUpFormHandler(){if(!/^[a-zA-Z0-9_]+$/.test(signUpFormData.username)){toast.error(\"Invalid username: Username can only contain letters, numbers, and underscores.\",toastConfig);return;}if(/\\s/.test(signUpFormData.password)){toast.error(\"Invalid password: password cant have whitespaces\",toastConfig);return;}if(signUpFormData.confirmpassword!==signUpFormData.password){toast.error(\"Password and Confirm password must match\",toastConfig);return;}if(signUpFormData.password<6){toast.error(\"Password must more then 6 characters\",toastConfig);}if(!/^[a-zA-Z0-9_\\s]+$/.test(signUpFormData.name)){toast.error(\"Invalid name: Name can only contain letters, numbers, underscores, and spaces.\",toastConfig);return;}if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(signUpFormData.email)){toast.error(\"Invalid Email address\",toastConfig);return;}toast.success(\"Sign Up Successful\",toastConfig);console.log(\"SignUp Form:\",signUpFormData);}function loginFormHandler(){if(loginFormData.usernameLogin.length===0){toast.warn(\"Please enter username\",toastConfig);return;}if(loginFormData.passwordLogin.length===0){toast.warn(\"Please enter Password\",toastConfig);return;}if(!/^[a-zA-Z0-9_]+$/.test(loginFormData.usernameLogin)){toast.error(\"Invalid username: Username can only contain letters, numbers, and underscores.\",toastConfig);return;}if(/\\s/.test(loginFormData.passwordLogin)){toast.error(\"Invalid password: password cant have whitespaces\",toastConfig);return;}toast.success(\"Login Successful\",toastConfig);console.log(\"Login Form Data:\",loginFormData);}// const navigate = useNavigate();\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),signup=_useState6[0],setSignUp=_useState6[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),signup?/*#__PURE__*/ //signup form\n_jsx(MDBContainer,{style:{fontFamily:\"'Overpass', sans-serif\",backgroundColor:\"transparent\",boxShadow:\"none\"},children:/*#__PURE__*/_jsx(MDBRow,{className:\"d-flex justify-content-center align-items-center h-100\",children:/*#__PURE__*/_jsx(MDBCol,{col:\"12\",children:/*#__PURE__*/_jsx(MDBCard,{className:\"text-white my-5 mx-auto\",style:{borderRadius:\"1rem\",maxWidth:\"400px\",backgroundColor:\"#282f33\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(event){event.preventDefault();signUpFormHandler();},children:/*#__PURE__*/_jsxs(MDBCardBody,{className:\"p-5 d-flex flex-column align-items-center mx-auto w-100\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"WELCOME TO\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"fw-bold mb-2 text-uppercase\",children:\"ReactBites\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-white-50 mb-5\",children:\"Login for a seamless experience\"}),/*#__PURE__*/_jsx(MDBInput,{wrapperClass:\"mb-4 mx-5 w-100\",labelClass:\"text-white\",label:\"Enter username\",name:\"username\",id:\"username\",type:\"text\",size:\"lg\",value:signUpFormData.username,onChange:function onChange(event){var usernameValue=event.target.value;setSignUpFormData(_objectSpread(_objectSpread({},signUpFormData),{},{username:usernameValue}));},style:{color:\"white\"}}),/*#__PURE__*/_jsx(MDBInput,{wrapperClass:\"mb-4 mx-5 w-100\",labelClass:\"text-white\",label:\"Enter name\",name:\"name\",id:\"name\",type:\"text\",size:\"lg\",value:signUpFormData.name,onChange:function onChange(event){var nameValue=event.target.value;setSignUpFormData(_objectSpread(_objectSpread({},signUpFormData),{},{name:nameValue}));},style:{color:\"white\"}}),/*#__PURE__*/_jsx(MDBInput,{wrapperClass:\"mb-4 mx-5 w-100\",labelClass:\"text-white\",label:\"Enter Email\",name:\"email\",id:\"email\",type:\"email\",size:\"lg\",value:signUpFormData.email,onChange:function onChange(event){var emailValue=event.target.value;setSignUpFormData(_objectSpread(_objectSpread({},signUpFormData),{},{email:emailValue}));},style:{color:\"white\"}}),/*#__PURE__*/_jsx(MDBInput,{wrapperClass:\"mb-4 mx-5 w-100\",labelClass:\"text-white\",label:\"Password?\",id:\"password\",name:\"password\",type:\"password\",size:\"lg\",value:signUpFormData.password,onChange:function onChange(event){var passwordValue=event.target.value;setSignUpFormData(_objectSpread(_objectSpread({},signUpFormData),{},{password:passwordValue}));},style:{color:\"white\"}}),/*#__PURE__*/_jsx(MDBInput,{wrapperClass:\"mb-4 mx-5 w-100\",labelClass:\"text-white\",label:\"Confirm Passoword?\",id:\"confirmpassword\",name:\"confirmpassword\",type:\"password\",size:\"lg\",value:signUpFormData.confirmpassword,onChange:function onChange(event){var confirmpasswordValue=event.target.value;setSignUpFormData(_objectSpread(_objectSpread({},signUpFormData),{},{confirmpassword:confirmpasswordValue}));},style:{color:\"white\"}}),/*#__PURE__*/_jsx(MDBBtn,{outline:true,className:\"mt-2 mx-2 px-5\",color:\"white\",size:\"lg\",type:\"submit\",children:\"SignUp\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0 mt-4\",children:[\"Already have an account?\",\" \",/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){setSignUp(false);},className:\"text-white-50 fw-bold\",style:{cursor:\"pointer\",textDecoration:\"underline\"},children:\"Login\"})]})})]})})})})})}):/*#__PURE__*/ // log in\n_jsx(MDBContainer,{style:{fontFamily:\"'Overpass', sans-serif\",backgroundColor:\"transparent\",boxShadow:\"none\"},children:/*#__PURE__*/_jsx(MDBRow,{className:\"d-flex justify-content-center align-items-center h-100\",children:/*#__PURE__*/_jsx(MDBCol,{col:\"12\",children:/*#__PURE__*/_jsx(MDBCard,{className:\"text-white my-5 mx-auto\",style:{borderRadius:\"1rem\",maxWidth:\"400px\",backgroundColor:\"#282f33\"},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(event){event.preventDefault();loginFormHandler();},children:/*#__PURE__*/_jsxs(MDBCardBody,{className:\"p-5 d-flex flex-column align-items-center mx-auto w-100\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"WELCOME TO\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"fw-bold mb-2 text-uppercase\",children:\"ReactBites\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-white-50 mb-5\",children:\"Login for a seamless experience\"}),/*#__PURE__*/_jsx(MDBInput,{wrapperClass:\"mb-4 mx-5 w-100\",labelClass:\"text-white\",label:\"Username\",name:\"usernameLogin\",id:\"usernameLogin\",type:\"text\",size:\"lg\",value:loginFormData.usernameLogin,onChange:function onChange(e){var usernameLoginValue=e.target.value;setLoginFormData(_objectSpread(_objectSpread({},loginFormData),{},{usernameLogin:usernameLoginValue}));},style:{color:\"white\"}}),/*#__PURE__*/_jsx(MDBInput,{wrapperClass:\"mb-4 mx-5 w-100\",labelClass:\"text-white\",label:\"Password\",id:\"passswordLogin\",name:\"passswordLogin\",type:\"password\",size:\"lg\",value:loginFormData.passwordLogin,onChange:function onChange(e){var passswordLoginValue=e.target.value;setLoginFormData(_objectSpread(_objectSpread({},loginFormData),{},{passwordLogin:passswordLoginValue}));},style:{color:\"white\"}}),/*#__PURE__*/_jsx(MDBBtn,{outline:true,className:\"mt-2 mx-2 px-5\",color:\"white\",size:\"lg\",type:\"submit\",children:\"Login\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0 mt-4\",children:[\"Don't have an account?\",\" \",/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){setSignUp(true);},className:\"text-white-50 fw-bold\",style:{cursor:\"pointer\",textDecoration:\"underline\"},children:\"Sign Up\"})]})})]})})})})})}),/*#__PURE__*/_jsx(ToastContainer,{})]});}export default LoginPage;","map":{"version":3,"names":["React","useState","MDBBtn","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBInput","ToastContainer","toast","Header","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoginPage","_useState","username","password","confirmpassword","email","name","_useState2","_slicedToArray","signUpFormData","setSignUpFormData","_useState3","usernameLogin","passwordLogin","_useState4","loginFormData","setLoginFormData","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","signUpFormHandler","test","error","success","console","log","loginFormHandler","length","warn","_useState5","_useState6","signup","setSignUp","children","style","fontFamily","backgroundColor","boxShadow","className","col","borderRadius","maxWidth","onSubmit","event","preventDefault","wrapperClass","labelClass","label","id","type","size","value","onChange","usernameValue","target","_objectSpread","color","nameValue","emailValue","passwordValue","confirmpasswordValue","outline","onClick","cursor","textDecoration","e","usernameLoginValue","passswordLoginValue"],"sources":["D:/food order project/src/components/login/loginpage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n} from \"mdb-react-ui-kit\";\r\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./cssFiles/loginComponent.css\";\r\nimport Header from \"../Layout/Header\";\r\n\r\nfunction LoginPage() {\r\n  const [signUpFormData, setSignUpFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n    email: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const [loginFormData, setLoginFormData] = useState({\r\n    usernameLogin: \"\",\r\n    passwordLogin: \"\",\r\n  });\r\n\r\n  const toastConfig = {\r\n    position: \"bottom-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  function signUpFormHandler() {\r\n    if (!/^[a-zA-Z0-9_]+$/.test(signUpFormData.username)) {\r\n      toast.error(\r\n        \"Invalid username: Username can only contain letters, numbers, and underscores.\",\r\n        toastConfig\r\n      );\r\n      return;\r\n    }\r\n    if (/\\s/.test(signUpFormData.password)) {\r\n      toast.error(\r\n        \"Invalid password: password cant have whitespaces\",\r\n        toastConfig\r\n      );\r\n      return;\r\n    }\r\n    if (signUpFormData.confirmpassword !== signUpFormData.password) {\r\n      toast.error(\"Password and Confirm password must match\", toastConfig);\r\n      return;\r\n    }\r\n    if (signUpFormData.password < 6) {\r\n      toast.error(\"Password must more then 6 characters\", toastConfig);\r\n    }\r\n    if (!/^[a-zA-Z0-9_\\s]+$/.test(signUpFormData.name)) {\r\n      toast.error(\r\n        \"Invalid name: Name can only contain letters, numbers, underscores, and spaces.\",\r\n        toastConfig\r\n      );\r\n      return;\r\n    }\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(signUpFormData.email)) {\r\n      toast.error(\"Invalid Email address\", toastConfig);\r\n      return;\r\n    }\r\n\r\n    toast.success(\"Sign Up Successful\", toastConfig);\r\n    console.log(\"SignUp Form:\", signUpFormData);\r\n  }\r\n\r\n  function loginFormHandler() {\r\n    if (loginFormData.usernameLogin.length === 0) {\r\n      toast.warn(\"Please enter username\", toastConfig);\r\n      return;\r\n    }\r\n    if (loginFormData.passwordLogin.length === 0) {\r\n      toast.warn(\"Please enter Password\", toastConfig);\r\n      return;\r\n    }\r\n    if (!/^[a-zA-Z0-9_]+$/.test(loginFormData.usernameLogin)) {\r\n      toast.error(\r\n        \"Invalid username: Username can only contain letters, numbers, and underscores.\",\r\n        toastConfig\r\n      );\r\n      return;\r\n    }\r\n    if (/\\s/.test(loginFormData.passwordLogin)) {\r\n      toast.error(\r\n        \"Invalid password: password cant have whitespaces\",\r\n        toastConfig\r\n      );\r\n      return;\r\n    }\r\n\r\n    toast.success(\"Login Successful\", toastConfig);\r\n    console.log(\"Login Form Data:\", loginFormData);\r\n  }\r\n\r\n  // const navigate = useNavigate();\r\n  const [signup, setSignUp] = useState(false);\r\n  return (\r\n    <>\r\n      <Header />\r\n      {signup ? (\r\n        //signup form\r\n        <MDBContainer\r\n          style={{\r\n            fontFamily: \"'Overpass', sans-serif\",\r\n            backgroundColor: \"transparent\",\r\n            boxShadow: \"none\",\r\n          }}\r\n        >\r\n          <MDBRow className=\"d-flex justify-content-center align-items-center h-100\">\r\n            <MDBCol col=\"12\">\r\n              <MDBCard\r\n                className=\"text-white my-5 mx-auto\"\r\n                style={{\r\n                  borderRadius: \"1rem\",\r\n                  maxWidth: \"400px\",\r\n                  backgroundColor: \"#282f33\",\r\n                }}\r\n              >\r\n                <form\r\n                  onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    signUpFormHandler();\r\n                  }}\r\n                >\r\n                  <MDBCardBody className=\"p-5 d-flex flex-column align-items-center mx-auto w-100\">\r\n                    <h4>WELCOME TO</h4>\r\n                    <h2 className=\"fw-bold mb-2 text-uppercase\">ReactBites</h2>\r\n\r\n                    <p className=\"text-white-50 mb-5\">\r\n                      Login for a seamless experience\r\n                    </p>\r\n\r\n                    <MDBInput\r\n                      wrapperClass=\"mb-4 mx-5 w-100\"\r\n                      labelClass=\"text-white\"\r\n                      label=\"Enter username\"\r\n                      name=\"username\"\r\n                      id=\"username\"\r\n                      type=\"text\"\r\n                      size=\"lg\"\r\n                      value={signUpFormData.username}\r\n                      onChange={(event) => {\r\n                        const usernameValue = event.target.value;\r\n                        setSignUpFormData({\r\n                          ...signUpFormData,\r\n                          username: usernameValue,\r\n                        });\r\n                      }}\r\n                      style={{ color: \"white\" }}\r\n                    />\r\n                    <MDBInput\r\n                      wrapperClass=\"mb-4 mx-5 w-100\"\r\n                      labelClass=\"text-white\"\r\n                      label=\"Enter name\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      type=\"text\"\r\n                      size=\"lg\"\r\n                      value={signUpFormData.name}\r\n                      onChange={(event) => {\r\n                        const nameValue = event.target.value;\r\n                        setSignUpFormData({\r\n                          ...signUpFormData,\r\n                          name: nameValue,\r\n                        });\r\n                      }}\r\n                      style={{ color: \"white\" }}\r\n                    />\r\n                    <MDBInput\r\n                      wrapperClass=\"mb-4 mx-5 w-100\"\r\n                      labelClass=\"text-white\"\r\n                      label=\"Enter Email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      size=\"lg\"\r\n                      value={signUpFormData.email}\r\n                      onChange={(event) => {\r\n                        const emailValue = event.target.value;\r\n                        setSignUpFormData({\r\n                          ...signUpFormData,\r\n                          email: emailValue,\r\n                        });\r\n                      }}\r\n                      style={{ color: \"white\" }}\r\n                    />\r\n                    <MDBInput\r\n                      wrapperClass=\"mb-4 mx-5 w-100\"\r\n                      labelClass=\"text-white\"\r\n                      label=\"Password?\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      size=\"lg\"\r\n                      value={signUpFormData.password}\r\n                      onChange={(event) => {\r\n                        const passwordValue = event.target.value;\r\n                        setSignUpFormData({\r\n                          ...signUpFormData,\r\n                          password: passwordValue,\r\n                        });\r\n                      }}\r\n                      style={{ color: \"white\" }}\r\n                    />\r\n                    <MDBInput\r\n                      wrapperClass=\"mb-4 mx-5 w-100\"\r\n                      labelClass=\"text-white\"\r\n                      label=\"Confirm Passoword?\"\r\n                      id=\"confirmpassword\"\r\n                      name=\"confirmpassword\"\r\n                      type=\"password\"\r\n                      size=\"lg\"\r\n                      value={signUpFormData.confirmpassword}\r\n                      onChange={(event) => {\r\n                        const confirmpasswordValue = event.target.value;\r\n                        setSignUpFormData({\r\n                          ...signUpFormData,\r\n                          confirmpassword: confirmpasswordValue,\r\n                        });\r\n                      }}\r\n                      style={{ color: \"white\" }}\r\n                    />\r\n\r\n                    <MDBBtn\r\n                      outline\r\n                      className=\"mt-2 mx-2 px-5\"\r\n                      color=\"white\"\r\n                      size=\"lg\"\r\n                      type=\"submit\"\r\n                    >\r\n                      SignUp\r\n                    </MDBBtn>\r\n\r\n                    <div>\r\n                      <p className=\"mb-0 mt-4\">\r\n                        Already have an account?{\" \"}\r\n                        <span\r\n                          onClick={() => {\r\n                            setSignUp(false);\r\n                          }}\r\n                          className=\"text-white-50 fw-bold\"\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                            textDecoration: \"underline\",\r\n                          }}\r\n                        >\r\n                          Login\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </MDBCardBody>\r\n                </form>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      ) : (\r\n        // log in\r\n        <MDBContainer\r\n          style={{\r\n            fontFamily: \"'Overpass', sans-serif\",\r\n            backgroundColor: \"transparent\",\r\n            boxShadow: \"none\",\r\n          }}\r\n        >\r\n          <MDBRow className=\"d-flex justify-content-center align-items-center h-100\">\r\n            <MDBCol col=\"12\">\r\n              <MDBCard\r\n                className=\"text-white my-5 mx-auto\"\r\n                style={{\r\n                  borderRadius: \"1rem\",\r\n                  maxWidth: \"400px\",\r\n                  backgroundColor: \"#282f33\",\r\n                }}\r\n              >\r\n                <form\r\n                  onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    loginFormHandler();\r\n                  }}\r\n                >\r\n                  <MDBCardBody className=\"p-5 d-flex flex-column align-items-center mx-auto w-100\">\r\n                    <h4>WELCOME TO</h4>\r\n                    <h2 className=\"fw-bold mb-2 text-uppercase\">ReactBites</h2>\r\n\r\n                    <p className=\"text-white-50 mb-5\">\r\n                      Login for a seamless experience\r\n                    </p>\r\n\r\n                    <MDBInput\r\n                      wrapperClass=\"mb-4 mx-5 w-100\"\r\n                      labelClass=\"text-white\"\r\n                      label=\"Username\"\r\n                      name=\"usernameLogin\"\r\n                      id=\"usernameLogin\"\r\n                      type=\"text\"\r\n                      size=\"lg\"\r\n                      value={loginFormData.usernameLogin}\r\n                      onChange={(e) => {\r\n                        const usernameLoginValue = e.target.value;\r\n                        setLoginFormData({\r\n                          ...loginFormData,\r\n                          usernameLogin: usernameLoginValue,\r\n                        });\r\n                      }}\r\n                      style={{ color: \"white\" }}\r\n                    />\r\n                    <MDBInput\r\n                      wrapperClass=\"mb-4 mx-5 w-100\"\r\n                      labelClass=\"text-white\"\r\n                      label=\"Password\"\r\n                      id=\"passswordLogin\"\r\n                      name=\"passswordLogin\"\r\n                      type=\"password\"\r\n                      size=\"lg\"\r\n                      value={loginFormData.passwordLogin}\r\n                      onChange={(e) => {\r\n                        const passswordLoginValue = e.target.value;\r\n                        setLoginFormData({\r\n                          ...loginFormData,\r\n                          passwordLogin: passswordLoginValue,\r\n                        });\r\n                      }}\r\n                      style={{ color: \"white\" }}\r\n                    />\r\n\r\n                    <MDBBtn\r\n                      outline\r\n                      className=\"mt-2 mx-2 px-5\"\r\n                      color=\"white\"\r\n                      size=\"lg\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Login\r\n                    </MDBBtn>\r\n\r\n                    <div>\r\n                      <p className=\"mb-0 mt-4\">\r\n                        Don't have an account?{\" \"}\r\n                        <span\r\n                          onClick={() => {\r\n                            setSignUp(true);\r\n                          }}\r\n                          className=\"text-white-50 fw-bold\"\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                            textDecoration: \"underline\",\r\n                          }}\r\n                        >\r\n                          Sign Up\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </MDBCardBody>\r\n                </form>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      )}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}