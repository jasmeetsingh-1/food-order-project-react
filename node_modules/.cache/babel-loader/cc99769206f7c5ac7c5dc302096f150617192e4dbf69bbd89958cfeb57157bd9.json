{"ast":null,"code":"var _jsxFileName = \"D:\\\\food order project\\\\src\\\\components\\\\Layout\\\\RotatingHeading\\\\RotatingHeading.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"./RotatingHeading.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingText = () => {\n  _s();\n  useEffect(() => {\n    // Check if the animation has already been played\n    const hasAnimationPlayed = localStorage.getItem(\"hasAnimationPlayed\");\n\n    // If the animation has not been played, trigger the animation and store the flag\n    if (!hasAnimationPlayed) {\n      const wrapper = document.querySelector(\".wrapper\");\n      wrapper.classList.add(\"play-animation\");\n\n      // Set the flag in local storage\n      localStorage.setItem(\"hasAnimationPlayed\", \"true\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"words\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"heading-font-rotating-text\",\n        children: \"React Meals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RotatingText, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RotatingText;\nexport default RotatingText;\nvar _c;\n$RefreshReg$(_c, \"RotatingText\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","RotatingText","_s","hasAnimationPlayed","localStorage","getItem","wrapper","document","querySelector","classList","add","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/food order project/src/components/Layout/RotatingHeading/RotatingHeading.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./RotatingHeading.css\";\r\n\r\nconst RotatingText = () => {\r\n  useEffect(() => {\r\n    // Check if the animation has already been played\r\n    const hasAnimationPlayed = localStorage.getItem(\"hasAnimationPlayed\");\r\n\r\n    // If the animation has not been played, trigger the animation and store the flag\r\n    if (!hasAnimationPlayed) {\r\n      const wrapper = document.querySelector(\".wrapper\");\r\n      wrapper.classList.add(\"play-animation\");\r\n\r\n      // Set the flag in local storage\r\n      localStorage.setItem(\"hasAnimationPlayed\", \"true\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"words\">\r\n        <span className=\"heading-font-rotating-text\">React Meals</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RotatingText;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzBJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;;IAErE;IACA,IAAI,CAACF,kBAAkB,EAAE;MACvB,MAAMG,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;MAClDF,OAAO,CAACG,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;;MAEvC;MACAN,YAAY,CAACO,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC;IACpD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKY,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtBb,OAAA;MAAKY,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBb,OAAA;QAAMY,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAtBID,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}