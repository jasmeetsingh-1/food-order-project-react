{"ast":null,"code":"var _jsxFileName = \"D:\\\\food order project\\\\01-starting-project\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useEffect } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { act } from \"react-dom/test-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cartReducer(state, action) {\n  if (action.type === \"add\") {\n    //here we need to check it action.item is in cart then only uodate its amount value\n    //have to check in state.items then we'll put the map\n\n    //check if action.item is in cart\n    let flag = false;\n    const indexOFItem = state.items.findIndex(item => item.id === action.item.id);\n    let newItem;\n    state.items.map(item => {\n      if (item.id === action.item.id) {\n        newItem = {\n          ...item,\n          amount: action.item.amount + item.amount\n        };\n        flag = true;\n        return;\n      }\n    });\n    if (!flag) {\n      const updatedItems = state.items.concat(action.item);\n      const newTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: newTotalAmount\n      };\n    } else {\n      const newTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      const updatedItems = [...state.items];\n      updatedItems[indexOFItem] = newItem;\n      return {\n        items: updatedItems,\n        totalAmount: newTotalAmount\n      };\n    }\n  }\n  return state;\n}\nconst initial = {\n  items: [],\n  totalAmount: 0\n};\nfunction CardProvider(props) {\n  _s();\n  const [cartState, cartReducerFunction] = useReducer(cartReducer, initial);\n  function addItemIntoCart(item) {\n    cartReducerFunction({\n      type: \"add\",\n      item: item\n    });\n  }\n  function removeItemFromCart(id) {}\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemIntoCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(CardProvider, \"NW8YdlhH+niw6JfcUNTjFoeVGKU=\");\n_c = CardProvider;\nexport default CardProvider;\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["useReducer","useEffect","CartContext","act","jsxDEV","_jsxDEV","cartReducer","state","action","type","flag","indexOFItem","items","findIndex","item","id","newItem","map","amount","updatedItems","concat","newTotalAmount","totalAmount","price","initial","CardProvider","props","_s","cartState","cartReducerFunction","addItemIntoCart","removeItemFromCart","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/food order project/01-starting-project/src/components/store/CartProvider.js"],"sourcesContent":["import { useReducer, useEffect } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nfunction cartReducer(state, action) {\r\n  if (action.type === \"add\") {\r\n    //here we need to check it action.item is in cart then only uodate its amount value\r\n    //have to check in state.items then we'll put the map\r\n\r\n    //check if action.item is in cart\r\n    let flag = false;\r\n\r\n    const indexOFItem = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    let newItem;\r\n\r\n    state.items.map((item) => {\r\n\r\n      if (item.id === action.item.id) {\r\n        newItem = {\r\n          ...item,\r\n          amount: action.item.amount + item.amount,\r\n        };\r\n        flag = true;\r\n        return;\r\n      }\r\n    });\r\n\r\n    \r\n\r\n    if (!flag) {\r\n      const updatedItems = state.items.concat(action.item);\r\n      const newTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: newTotalAmount,\r\n      };\r\n    } else {\r\n      const newTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n      const updatedItems = [...state.items];\r\n      updatedItems[indexOFItem] = newItem;\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: newTotalAmount,\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nconst initial = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nfunction CardProvider(props) {\r\n  const [cartState, cartReducerFunction] = useReducer(cartReducer, initial);\r\n\r\n  function addItemIntoCart(item) {\r\n    cartReducerFunction({ type: \"add\", item: item });\r\n  }\r\n  function removeItemFromCart(id) {}\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemIntoCart,\r\n    removeItem: removeItemFromCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CardProvider;\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,GAAG,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB;IACA;;IAEA;IACA,IAAIC,IAAI,GAAG,KAAK;IAEhB,MAAMC,WAAW,GAAGJ,KAAK,CAACK,KAAK,CAACC,SAAS,CACtCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACM,IAAI,CAACC,EACpC,CAAC;IAED,IAAIC,OAAO;IAEXT,KAAK,CAACK,KAAK,CAACK,GAAG,CAAEH,IAAI,IAAK;MAExB,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACM,IAAI,CAACC,EAAE,EAAE;QAC9BC,OAAO,GAAG;UACR,GAAGF,IAAI;UACPI,MAAM,EAAEV,MAAM,CAACM,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACI;QACpC,CAAC;QACDR,IAAI,GAAG,IAAI;QACX;MACF;IACF,CAAC,CAAC;IAIF,IAAI,CAACA,IAAI,EAAE;MACT,MAAMS,YAAY,GAAGZ,KAAK,CAACK,KAAK,CAACQ,MAAM,CAACZ,MAAM,CAACM,IAAI,CAAC;MACpD,MAAMO,cAAc,GAClBd,KAAK,CAACe,WAAW,GAAGd,MAAM,CAACM,IAAI,CAACS,KAAK,GAAGf,MAAM,CAACM,IAAI,CAACI,MAAM;MAC5D,OAAO;QACLN,KAAK,EAAEO,YAAY;QACnBG,WAAW,EAAED;MACf,CAAC;IACH,CAAC,MAAM;MACL,MAAMA,cAAc,GAClBd,KAAK,CAACe,WAAW,GAAGd,MAAM,CAACM,IAAI,CAACS,KAAK,GAAGf,MAAM,CAACM,IAAI,CAACI,MAAM;MAC5D,MAAMC,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACK,KAAK,CAAC;MACrCO,YAAY,CAACR,WAAW,CAAC,GAAGK,OAAO;MACnC,OAAO;QACLJ,KAAK,EAAEO,YAAY;QACnBG,WAAW,EAAED;MACf,CAAC;IACH;EACF;EACA,OAAOd,KAAK;AACd;AAEA,MAAMiB,OAAO,GAAG;EACdZ,KAAK,EAAE,EAAE;EACTU,WAAW,EAAE;AACf,CAAC;AAED,SAASG,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,mBAAmB,CAAC,GAAG7B,UAAU,CAACM,WAAW,EAAEkB,OAAO,CAAC;EAEzE,SAASM,eAAeA,CAAChB,IAAI,EAAE;IAC7Be,mBAAmB,CAAC;MAAEpB,IAAI,EAAE,KAAK;MAAEK,IAAI,EAAEA;IAAK,CAAC,CAAC;EAClD;EACA,SAASiB,kBAAkBA,CAAChB,EAAE,EAAE,CAAC;EAEjC,MAAMiB,WAAW,GAAG;IAClBpB,KAAK,EAAEgB,SAAS,CAAChB,KAAK;IACtBU,WAAW,EAAEM,SAAS,CAACN,WAAW;IAClCW,OAAO,EAAEH,eAAe;IACxBI,UAAU,EAAEH;EACd,CAAC;EAED,oBACE1B,OAAA,CAACH,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACtCX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B;AAACd,EAAA,CApBQF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAsBrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}